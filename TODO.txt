database http://www.cs.princeton.edu/courses/archive/fall06/cos402/papers/korfrubik.pdf
    selective heuristic
        v comparison
        v scoring
        v    is_final
    loop
        simply iterate over ids
optimizing
    priority queue instead
    bidirectional astar
    multithreading
        custom solution
    swap instead of delete
        check with StateRef
        check with google array
    check cache misses
        cachegrind
        array instead of list
    --forget smart insert
    value instead of reference inside hashtable
    array instead of list instead of list
heuristic
    if forget and greedy, a
    check square don't take seperate paths
        yeah I don't think so
    maybe relative distance instead of absolute
        that way the computer tries to place a border between corners instead of not
        maybe for invalid
cleanup
    uid = cube_id * 3 + rot_id or something
input
    direct color input
        get uid
        check if each uid is present
        http://math.stackexchange.com/questions/127577/how-to-tell-if-a-rubiks-cube-is-solvable

longest solution is exactly 20 moves
